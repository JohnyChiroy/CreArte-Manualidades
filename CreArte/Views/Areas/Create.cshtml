@model CreArte.ModelsPartial.AreaCreateVM
@{
    ViewData["Title"] = "Crear Área";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Asegúrate que tu _Layout renderiza @RenderSection("Styles"/"Scripts", false)
}

<div class="ua-card">
    <h2 style="margin:0 0 12px 0;">Nueva Área</h2>

    <form asp-action="Create" method="post" id="frmArea" data-guard="true" autocomplete="off">
        @Html.AntiForgeryToken()
        <!-- Resumen de validación MVC -->
        <div asp-validation-summary="ModelOnly" class="text-danger validation-summary-errors"></div>

        <!-- Fila superior: Código (solo lectura) y Estado (pill + checkbox) -->
        <div class="ua-row">
            <!-- Código -->
            <div class="ua-field">
                <div class="ua-kv">
                    <label asp-for="AREA_ID"><strong>Código:</strong></label>
                    <input asp-for="AREA_ID" class="form-control" readonly />
                </div>
                @* <span class="ua-help">Se genera como <b>AR0001</b>, <b>AR0002</b>, ...</span> *@
                <span asp-validation-for="AREA_ID" class="text-danger"></span>
            </div>

            <!-- Estado -->
            <div class="ua-field">
                <div class="ua-kv">
                    <label><strong>Estado:</strong></label>
                    <!-- Pill visual, toma el valor inicial del modelo -->
                    <span id="pillEstado" class="ua-pill@(Model?.ESTADO == true ? " active" : "")">
                        @(Model?.ESTADO == true ? "Activo" : "Inactivo")
                    </span>
                </div>

                <!-- Checkbox real para el POST (no cambiamos el campo) -->
                <div class="ua-switch" style="margin-top:6px;">
                    <input asp-for="ESTADO" type="checkbox" id="chkEstado" />
                    <span>Activo</span>
                </div>
                <span asp-validation-for="ESTADO" class="text-danger"></span>
            </div>
        </div>

        <!-- Nombre -->
        <div class="ua-field" style="margin-top:12px;">
            <label asp-for="AREA_NOMBRE"><strong>Nombre del área:</strong></label>
            <input asp-for="AREA_NOMBRE" class="form-control" maxlength="100" />
            <span asp-validation-for="AREA_NOMBRE" class="text-danger"></span>
            <div class="ua-help"><span id="cntNombre">0</span></div>
        </div>

        <!-- Nota simple (opcional) -->
        </br>
        <div class="ua-note" aria-live="polite">
            <strong>Nota:</strong> Seleccione el nivel y, si lo desea, agregue una descripción breve.
        </div>

        <!-- Select Nivel y Descripción -->
        <div class="ua-row" style="margin-top:8px;">
            <div class="ua-field">
                <label asp-for="NIVEL_ID"><strong>Nivel:</strong></label>
                <select asp-for="NIVEL_ID" class="form-control" asp-items="Model.Niveles">
                    <option value="">Seleccione un nivel</option>
                </select>
                <span asp-validation-for="NIVEL_ID" class="text-danger"></span>
            </div>

            <div class="ua-field">
                <label asp-for="AREA_DESCRIPCION"><strong>Descripción:</strong></label>
                <textarea asp-for="AREA_DESCRIPCION" class="form-control" rows="3" maxlength="255"></textarea>
                <span asp-validation-for="AREA_DESCRIPCION" class="text-danger"></span>
                <div class="ua-help">Opcional <span id="cntDesc">0</span></div>
            </div>
        </div>

        <!-- Acciones (mismo patrón que Usuarios) -->
        <div class="ua-actions">
            <a class="btn-cancel js-leave" asp-action="Index" asp-controller="Areas">
                <i class="bi bi-x-circle"></i> <span>Cancelar</span>
            </a>
            <button id="btnGuardar" type="submit" class="btn-save" disabled>
                <i class="bi bi-save"></i> <span>Guardar</span>
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // ============================
        // Contadores de caracteres (solo UI)
        // ============================
        (function () {
            const $nom = document.getElementById('AREA_NOMBRE');
            const $des = document.getElementById('AREA_DESCRIPCION');
            const $cnNom = document.getElementById('cntNombre');
            const $cnDes = document.getElementById('cntDesc');

            function upd($el, $cn, max) {
                if (!$el || !$cn) return;
                const len = ($el.value || '').length;
                $cn.textContent = len + '/' + max;
            }
            if ($nom) {
                upd($nom, $cnNom, 100);
                $nom.addEventListener('input', () => upd($nom, $cnNom, 100));
            }
            if ($des) {
                upd($des, $cnDes, 255);
                $des.addEventListener('input', () => upd($des, $cnDes, 255));
            }
        })();

        // ============================
        // Pill de Estado sincronizada con checkbox (misma UX que Usuarios)
        // ============================
        (function () {
            const chk = document.getElementById('chkEstado');
            const pill = document.getElementById('pillEstado');
            if (!chk || !pill) return;

            function syncPill() {
                if (chk.checked) {
                    pill.classList.add('active');
                    pill.textContent = 'Activo';
                } else {
                    pill.classList.remove('active');
                    pill.textContent = 'Inactivo';
                }
            }
            chk.addEventListener('change', syncPill);
            syncPill(); // estado inicial
        })();

        // ============================
        // Habilitar botón Guardar al tener datos mínimos
        // (Nombre y Nivel) – igual patrón que en Usuarios (btn-save.enabled)
        // ============================
        (function () {
            const btn = document.getElementById('btnGuardar');
            const nom = document.getElementById('AREA_NOMBRE');
            const niv = document.getElementById('NIVEL_ID') || document.querySelector('[name="NIVEL_ID"]');

            function evalReady() {
                const okNom = nom && nom.value.trim().length > 0;
                const okNiv = niv && (niv.value || '').trim().length > 0;
                const ready = okNom && okNiv;

                if (!btn) return;
                btn.disabled = !ready;
                btn.classList.toggle('enabled', ready);
            }

            if (nom) nom.addEventListener('input', evalReady);
            if (niv) niv.addEventListener('change', evalReady);

            // primera evaluación
            evalReady();
        })();

        // ============================
        // Prevenir doble submit (UX)
        // ============================
        (function () {
            const frm = document.getElementById('frmArea');
            const btn = document.getElementById('btnGuardar');
            if (!frm || !btn) return;

            frm.addEventListener('submit', function () {
                btn.disabled = true;
                btn.classList.remove('enabled');
                btn.innerHTML = '<i class="bi bi-hourglass-split"></i> Guardando...';
            });
        })();

    </script>
}
