@* ===============================================
   RUTA: Views/SubCategorias/Create.cshtml
   DESCRIPCIÓN: Formulario de creación de SUBCATEGORÍA
   - Mismos estilos que Empleados/Categorías
   - PRG con SweetAlert2
   =============================================== *@
@model CreArte.ModelsPartial.SubCategoriaCreateVM
@{
    ViewData["Title"] = "Crear Subcategoría";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="ua-card">
    <h2 style="margin:0 0 12px 0;">Nueva Subcategoría</h2>

    <form asp-action="Create" asp-controller="SubCategorias" method="post" id="frmSubCat" data-guard="true" autocomplete="off">
        @Html.AntiForgeryToken()

        <div asp-validation-summary="ModelOnly" class="text-danger validation-summary-errors"></div>

        <!-- Fila superior: Código + Estado -->
        <div class="ua-row">
            <div class="ua-field">
                <div class="ua-kv">
                    <label asp-for="SUBCATEGORIA_ID"><strong>Código:</strong></label>
                    <input asp-for="SUBCATEGORIA_ID" class="form-control" readonly />
                </div>
                <span asp-validation-for="SUBCATEGORIA_ID" class="text-danger"></span>
            </div>

            <div class="ua-field">
                <div class="ua-kv">
                    <label><strong>Estado:</strong></label>
                    <span id="pillEstado" class="ua-pill@(Model?.ESTADO == true ? " active" : "")">
                        @(Model?.ESTADO == true ? "Activo" : "Inactivo")
                    </span>
                </div>
                <div class="ua-switch" style="margin-top:2px;">
                    <input asp-for="ESTADO" type="checkbox" id="chkEstado" />
                    <span>Activo</span>
                </div>
                <span asp-validation-for="ESTADO" class="text-danger"></span>
            </div>
        </div>

        <!-- Nombre + Categoría -->
        <div class="ua-row" style="margin-top:8px;">
            <div class="ua-field" style="flex:1 1 65%;">
                <label asp-for="SUBCATEGORIA_NOMBRE"><strong>Nombre:*</strong></label>
                <input asp-for="SUBCATEGORIA_NOMBRE" class="form-control" maxlength="100" required />
                <span asp-validation-for="SUBCATEGORIA_NOMBRE" class="text-danger"></span>
            </div>
            <div class="ua-field" style="flex:1 1 35%;">
                <label asp-for="CATEGORIA_ID"><strong>Categoría:*</strong></label>
                <select asp-for="CATEGORIA_ID" class="form-control" asp-items="Model.Categorias" required>
                    <option value="">Seleccione una categoría ↓</option>
                </select>
                <span asp-validation-for="CATEGORIA_ID" class="text-danger"></span>
            </div>
        </div>

        <!-- Descripción -->
        <div class="ua-row" style="margin-top:8px;">
            <div class="ua-field" style="flex:1 1 100%;">
                <label asp-for="SUBCATEGORIA_DESCRIPCION"><strong>Descripción:</strong></label>
                <input asp-for="SUBCATEGORIA_DESCRIPCION" class="form-control" maxlength="255" />
                <span asp-validation-for="SUBCATEGORIA_DESCRIPCION" class="text-danger"></span>
            </div>
        </div>

        <!-- Acciones -->
        <div class="ua-actions">
            <a class="btn-cancel js-leave" asp-action="Index" asp-controller="SubCategorias">
                <i class="bi bi-x-circle"></i> <span>Cancelar</span>
            </a>
            <button id="btnGuardar" type="submit" class="btn-save" disabled>
                <i class="bi bi-save"></i> <span>Guardar</span>
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Pill Estado (misma lógica que Empleados)
        (function () {
            const chk = document.getElementById('chkEstado');
            const pill = document.getElementById('pillEstado');
            if (!chk || !pill) return;
            const syncPill = () => chk.checked ? (pill.classList.add('active'), pill.textContent = 'Activo')
                                               : (pill.classList.remove('active'), pill.textContent = 'Inactivo');
            chk.addEventListener('change', syncPill); syncPill();
        })();

        // Guard: habilitar botón al cumplir obligatorios
        (function(){
            const btn  = document.getElementById('btnGuardar');
            const form = document.getElementById('frmSubCat');
            const reqIds = ['SUBCATEGORIA_NOMBRE','CATEGORIA_ID'];
            const els = reqIds.map(id => document.getElementById(id));
            function ready(){
                const ok = els.every(el => el && (el.value||'').trim().length>0) && (form?form.checkValidity():true);
                if (!btn) return;
                btn.disabled = !ok;
                btn.classList.toggle('enabled', ok);
            }
            els.forEach(el => el && el.addEventListener(el.tagName==='SELECT'?'change':'input', ready));
            ready();
        })();

        // Prevenir doble submit
        (function () {
            const frm = document.getElementById('frmSubCat');
            const btn = document.getElementById('btnGuardar');
            if (!frm || !btn) return;
            frm.addEventListener('submit', function () {
                btn.disabled = true; btn.classList.remove('enabled');
                btn.innerHTML = '<i class="bi bi-hourglass-split"></i> Guardando...';
            });
        })();

        // PRG (SweetAlert2) con TempData
        (function () {
            if (!window.Swal) return;
            const title='@(TempData["SwalTitle"] ?? "")', text='@(TempData["SwalText"] ?? "")';
            const urlIndex='@(TempData["SwalIndexUrl"] ?? "")', urlCreate='@(TempData["SwalCreateUrl"] ?? "")';
            if (!title && !text) return;
            Swal.fire({ icon:'success', title:title||'Guardado', text:text||'El registro se creó correctamente.',
                showDenyButton:true, confirmButtonText:'Volver al listado', denyButtonText:'Crear otro',
                allowOutsideClick:false, allowEscapeKey:false
            }).then(r=>{ if (r.isConfirmed && urlIndex) location.href=urlIndex; else if (r.isDenied && urlCreate) location.href=urlCreate; });
        })();
    </script>
}
