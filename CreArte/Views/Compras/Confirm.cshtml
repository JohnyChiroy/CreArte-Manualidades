@model CreArte.ModelsPartial.CompraConfirmarVM
@{
    ViewData["Title"] = "Confirmar compra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="ua-card">
    <h2 class="mb-3">Confirmar @Model.CompraId</h2>

    <form asp-action="Confirm" method="post" autocomplete="off">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="CompraId" />
        <div class="alert alert-info py-2">
            <i class="bi bi-info-circle"></i>
            Debes completar el <strong>precio de compra</strong> de todas las líneas.
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label asp-for="FechaEntregaCompra" class="form-label"><strong>Fecha de entrega*</strong></label>
                <input asp-for="FechaEntregaCompra" type="date" class="form-control" />
                <span asp-validation-for="FechaEntregaCompra" class="text-danger small"></span>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-sm  ua-table-compra align-middle text-center">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Producto</th>
                        <th class="text-center">Imagen</th>
                        <th class="text-center">Cantidad</th>
                        <th class="text-center">Precio compra*</th>
                        @* <th>Vencimiento</th> *@
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Lineas.Count; i++)
                    {
                        <tr>

                            <td>
                                @Model.Lineas[i].ProductoId
                                <input type="hidden" name="Lineas[@i].ProductoId" value="@Model.Lineas[i].ProductoId" />
                            </td>
                            <!-- Producto: mostramos nombre, pero posteamos el ID -->
                            <td class="text-center">
                                @Model.Lineas[i].ProductoNombre
                                <input type="hidden" name="Lineas[@i].ProductoId" value="@Model.Lineas[i].ProductoId" />
                                <input type="hidden" name="Lineas[@i].ProductoNombre" value="@Model.Lineas[i].ProductoNombre" />
                            </td>

                            <!-- Imagen (sin placeholder para evitar rutas inexistentes) -->
                            <td class="text-center">
                                <img class="img-thumbnail ua-img-thumb-fila-details"
                                     src="@(Model.Lineas[i].ImagenProducto ?? "")"
                                     alt="@Model.Lineas[i].ProductoNombre" />
                            </td>

                            <!-- Cantidad (solo lectura + hidden para post) -->
                            <td class="text-center">
                                @Model.Lineas[i].Cantidad
                                <input type="hidden" name="Lineas[@i].Cantidad" value="@Model.Lineas[i].Cantidad" />
                            </td>

                            <!-- Precio de compra editable -->
                            <td class="text-end">
                                <input name="Lineas[@i].PrecioCompra"
                                       type="number" step="0.01" min="0"
                                       value="@(Model.Lineas[i].PrecioCompra?.ToString("0.##") ?? "")"
                                       class="form-control form-control-sm text-end" />
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>

        <div class="d-flex justify-content-end gap-2 mt-3">
            <a asp-action="Details" asp-route-id="@Model.CompraId" class="btn-cancel">
                Cancelar
            </a>

            <button type="submit" class="btn-confirmado">
                <i class="bi bi-check2-circle"></i> Confirmar
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const fechaCompra = new Date('@(Model.FechaCompra.ToString("yyyy-MM-dd"))');
            const inputFecha = document.querySelector('[name="FechaEntregaCompra"]');
            if (inputFecha) {
                // Restringir fecha mínima
                inputFecha.min = fechaCompra.toISOString().split('T')[0];

                // Validación adicional antes de enviar
                const form = document.querySelector('form');
                form.addEventListener('submit', (e) => {
                    const fEntrega = new Date(inputFecha.value);
                    if (fEntrega < fechaCompra) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'error',
                            title: 'Fecha inválida',
                            text: `La fecha de entrega no puede ser anterior a la fecha de compra (${fechaCompra.toLocaleDateString()}).`
                        });
                    }
                });
            }
        });
    </script>
}

