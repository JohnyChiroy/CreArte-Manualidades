@model CreArte.ModelsPartial.UsuarioListaViewModels

@{
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Ruta del layout principal
}

@functions{
    // Alterna dirección: si cambia de columna -> asc; si repite -> invierte
    string NextDir(string col, string currentSort, string currentDir)
    {
        if (!string.Equals(col, currentSort, StringComparison.OrdinalIgnoreCase))
            return "asc";
        return string.Equals(currentDir, "asc", StringComparison.OrdinalIgnoreCase) ? "desc" : "asc";
    }
    // Flecha ▲/▼ solo para la columna activa
    string Arrow(string col, string currentSort, string currentDir)
    {
        if (!string.Equals(col, currentSort, StringComparison.OrdinalIgnoreCase)) return "";
        return string.Equals(currentDir, "asc", StringComparison.OrdinalIgnoreCase) ? "▲" : "▼";
    }
}

<div class="container-fluid py-3">

    <!-- =========================
         BARRA SUPERIOR
         ========================= -->
    <div class="ua-toolbar">
        <h2 class="m-0"></h2>

        <div class="d-flex align-items-center gap-2">
            <!-- Rutas de acción -->
            <a asp-action="Create" class="ua-btn ua-btn-new">
                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2h6z"/></svg>
                NUEVO
            </a>
            <a asp-action="Details" class="ua-btn ua-btn-view">
                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M12 5c-7 0-10 7-10 7s3 7 10 7 10-7 10-7-3-7-10-7zm0 12a5 5 0 1 1 .001-10.001A5 5 0 0 1 12 17z"/></svg>
                VER
            </a>
            <a asp-action="Edit" class="ua-btn ua-btn-edit">
                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM21.41 6.34a1.25 1.25 0 0 0 0-1.77L19.43 2.6a1.25 1.25 0 0 0-1.77 0l-1.66 1.66 3.75 3.75 1.66-1.66z"/></svg>
                MODIFICAR
            </a>
        </div>

        <!-- Buscador (conserva Sort/Dir) -->
        <form method="get" asp-action="Index" class="ua-search d-flex align-items-center">
            <input type="hidden" name="Sort" value="@(Model.Sort ?? "fecha")" />
            <input type="hidden" name="Dir"  value="@(Model.Dir  ?? "desc")" />
            <input name="Search" value="@Model.Search" placeholder="Ingrese el texto a buscar..." />
            <button title="Buscar" type="submit">
                <svg viewBox="0 0 24 24" width="20" height="20" fill="currentColor"><path d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/></svg>
            </button>
        </form>
    </div>

    <!-- =========================
         FORM OCULTO PARA FILTROS/ESTADO
         ========================= -->
    <form id="uaFilterForm" method="get" asp-action="Index">
        <input type="hidden" name="Search" value="@Model.Search" />
        <input type="hidden" name="Page" value="1" />
        <input type="hidden" name="PageSize" value="@Model.PageSize" />
        <!-- Mantener orden actual -->
        <input type="hidden" name="Sort" value="@(Model.Sort ?? "fecha")" />
        <input type="hidden" name="Dir"  value="@(Model.Dir  ?? "desc")" />
        <!-- Valores actuales para activar iconos -->
        <input type="hidden" id="ua_val_usuario" value="@(Context.Request.Query["Usuario"])" />
        <input type="hidden" id="ua_val_fi" value="@(Model.FechaInicio?.ToString("yyyy-MM-dd"))" />
        <input type="hidden" id="ua_val_ff" value="@(Model.FechaFin?.ToString("yyyy-MM-dd"))" />
        <input type="hidden" id="ua_val_rol" value="@Model.Rol" />
        <input type="hidden" id="ua_val_estado" value="@(Model.Estado?.ToString().ToLower())" />
    </form>

    <!-- =========================
         TABLA
         ========================= -->
    <div class="table-responsive mt-3">
        <table class="table ua-table align-middle">
            <thead>
                <tr>
                    <th class="ua-col-check text-center align-middle">
                        <input type="checkbox" class="form-check-input" id="chkAll"
                               onclick="document.querySelectorAll('.row-chk').forEach(c=>c.checked=this.checked);" />
                    </th>

                    <!-- NO. (ordenable) -->
                    <th class="ua-col-no">
                        <div class="ua-th">
                            @{
                                var next_id = NextDir("id", Model.Sort ?? "fecha", Model.Dir ?? "desc");
                                var href_id = Url.Action("Index", new {
                                    Search = Model.Search,
                                    Usuario = Context.Request.Query["Usuario"].ToString(),
                                    FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                                    FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                                    Rol = Model.Rol,
                                    Estado = Model.Estado,
                                    Sort = "id",
                                    Dir  = next_id,
                                    Page = 1,
                                    PageSize = Model.PageSize
                                });
                                var isActive_id = (Model.Sort ?? "fecha").Equals("id", StringComparison.OrdinalIgnoreCase);
                            }
                            <a class="ua-sort @(isActive_id ? "" : "inactive")" href="@href_id">
                                <span class="ua-title">NO.</span>
                                <span class="ua-arrow">@Arrow("id", Model.Sort ?? "fecha", Model.Dir ?? "desc")</span>
                            </a>
                        </div>
                    </th>

                    <!-- USUARIO (ordenable + popover filtro) -->
                    <th>
                        <div class="ua-th ua-popover-wrap">
                            @{
                                var next_usr = NextDir("usuario", Model.Sort ?? "fecha", Model.Dir ?? "desc");
                                var href_usr = Url.Action("Index", new {
                                    Search = Model.Search,
                                    Usuario = Context.Request.Query["Usuario"].ToString(),
                                    FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                                    FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                                    Rol = Model.Rol,
                                    Estado = Model.Estado,
                                    Sort = "usuario",
                                    Dir  = next_usr,
                                    Page = 1,
                                    PageSize = Model.PageSize
                                });
                                var isActive_usr = (Model.Sort ?? "fecha").Equals("usuario", StringComparison.OrdinalIgnoreCase);
                            }
                            <a class="ua-sort @(isActive_usr ? "" : "inactive")" href="@href_usr">
                                <span class="ua-title">USUARIO</span>
                                <span class="ua-arrow">@Arrow("usuario", Model.Sort ?? "fecha", Model.Dir ?? "desc")</span>
                            </a>

                            <button type="button" class="ua-filter-btn" data-pop="popUsuario" title="Filtrar Usuario">
                                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M3 4h18l-7 8v6l-4 2v-8L3 4z"/></svg>
                            </button>
                            <div id="popUsuario" class="ua-popover" aria-hidden="true">
                                <input class="ua-input" type="text" id="fUsuario" placeholder="Ingrese el texto a filtrar..."
                                       value="@(Context.Request.Query["Usuario"])" />
                                <div class="ua-options" style="margin-top:8px;">
                                    <label class="ua-option"><input type="radio" name="optU" value="all" checked> (Todos)</label>
                                    <label class="ua-option"><input type="radio" name="optU" value="blanks"> (Vacíos)</label>
                                    <label class="ua-option"><input type="radio" name="optU" value="nonblanks"> (No Vacíos)</label>
                                </div>
                                <div class="ua-pop-actions">
                                    <button type="button" class="ua-btn-sm" onclick="uaClearUsuario()">Limpiar</button>
                                    <button type="button" class="ua-btn-sm primary" onclick="uaApplyUsuario()">Aplicar</button>
                                </div>
                            </div>
                        </div>
                    </th>

                    <!-- FECHA CREACION (ordenable + popover rango) -->
                    <th style="width:260px;">
                        <div class="ua-th ua-popover-wrap">
                            @{
                                var next_fecha = NextDir("fecha", Model.Sort ?? "fecha", Model.Dir ?? "desc");
                                var href_fecha = Url.Action("Index", new {
                                    Search = Model.Search,
                                    Usuario = Context.Request.Query["Usuario"].ToString(),
                                    FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                                    FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                                    Rol = Model.Rol,
                                    Estado = Model.Estado,
                                    Sort = "fecha",
                                    Dir  = next_fecha,
                                    Page = 1,
                                    PageSize = Model.PageSize
                                });
                                var isActive_fecha = (Model.Sort ?? "fecha").Equals("fecha", StringComparison.OrdinalIgnoreCase);
                            }
                            <a class="ua-sort @(isActive_fecha ? "" : "inactive")" href="@href_fecha">
                                <span class="ua-title">FECHA CREACION</span>
                                <span class="ua-arrow">@Arrow("fecha", Model.Sort ?? "fecha", Model.Dir ?? "desc")</span>
                            </a>

                            <button type="button" class="ua-filter-btn" data-pop="popFecha" title="Filtrar fecha">
                                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M3 4h18l-7 8v6l-4 2v-8L3 4z"/></svg>
                            </button>
                            <div id="popFecha" class="ua-popover" aria-hidden="true">
                                <div class="ua-dates">
                                    <div><small>Desde</small><input type="date" id="fIni" value="@(Model.FechaInicio?.ToString("yyyy-MM-dd"))" /></div>
                                    <div><small>Hasta</small><input type="date" id="fFin" value="@(Model.FechaFin?.ToString("yyyy-MM-dd"))" /></div>
                                </div>
                                <div class="ua-pop-actions">
                                    <button type="button" class="ua-btn-sm" onclick="uaClearFecha()">Limpiar</button>
                                    <button type="button" class="ua-btn-sm primary" onclick="uaApplyFecha()">Aplicar</button>
                                </div>
                            </div>
                        </div>
                    </th>

                    <!-- ROL (ordenable + popover select) -->
                    <th style="width:190px;">
                        <div class="ua-th ua-popover-wrap">
                            @{
                                var next_rol = NextDir("rol", Model.Sort ?? "fecha", Model.Dir ?? "desc");
                                var href_rol = Url.Action("Index", new {
                                    Search = Model.Search,
                                    Usuario = Context.Request.Query["Usuario"].ToString(),
                                    FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                                    FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                                    Rol = Model.Rol,
                                    Estado = Model.Estado,
                                    Sort = "rol",
                                    Dir  = next_rol,
                                    Page = 1,
                                    PageSize = Model.PageSize
                                });
                                var isActive_rol = (Model.Sort ?? "fecha").Equals("rol", StringComparison.OrdinalIgnoreCase);
                            }
                            <a class="ua-sort @(isActive_rol ? "" : "inactive")" href="@href_rol">
                                <span class="ua-title">ROL</span>
                                <span class="ua-arrow">@Arrow("rol", Model.Sort ?? "fecha", Model.Dir ?? "desc")</span>
                            </a>

                            <button type="button" class="ua-filter-btn" data-pop="popRol" title="Filtrar rol">
                                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M3 4h18l-7 8v6l-4 2v-8L3 4z"/></svg>
                            </button>
                            <div id="popRol" class="ua-popover" aria-hidden="true">
                                <select id="fRol" class="ua-input">
                                    <option value="">(Todos)</option>
                                    @if (ViewBag.Roles is IEnumerable<string> roles && roles.Any())
                                    {
                                        foreach (var r in roles)
                                        {
                                            <option value="@r" selected="@(Model.Rol == r ? "selected" : null)">@r</option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="Administrador" selected="@(Model.Rol == "Administrador" ? "selected" : null)">Administrador</option>
                                        <option value="Vendedor" selected="@(Model.Rol == "Vendedor" ? "selected" : null)">Vendedor</option>
                                    }
                                </select>
                                <div class="ua-pop-actions">
                                    <button type="button" class="ua-btn-sm" onclick="uaClearRol()">Limpiar</button>
                                    <button type="button" class="ua-btn-sm primary" onclick="uaApplyRol()">Aplicar</button>
                                </div>
                            </div>
                        </div>
                    </th>

                    <!-- ESTADO (ordenable + popover select) -->
                    <th style="width:150px;">
                        <div class="ua-th ua-popover-wrap">
                            @{
                                var next_estado = NextDir("estado", Model.Sort ?? "fecha", Model.Dir ?? "desc");
                                var href_estado = Url.Action("Index", new {
                                    Search = Model.Search,
                                    Usuario = Context.Request.Query["Usuario"].ToString(),
                                    FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                                    FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                                    Rol = Model.Rol,
                                    Estado = Model.Estado,
                                    Sort = "estado",
                                    Dir  = next_estado,
                                    Page = 1,
                                    PageSize = Model.PageSize
                                });
                                var isActive_estado = (Model.Sort ?? "fecha").Equals("estado", StringComparison.OrdinalIgnoreCase);
                            }
                            <a class="ua-sort @(isActive_estado ? "" : "inactive")" href="@href_estado">
                                <span class="ua-title">ESTADO</span>
                                <span class="ua-arrow">@Arrow("estado", Model.Sort ?? "fecha", Model.Dir ?? "desc")</span>
                            </a>

                            <button type="button" class="ua-filter-btn" data-pop="popEstado" title="Filtrar estado">
                                <svg viewBox="0 0 24 24" fill="currentColor"><path d="M3 4h18l-7 8v6l-4 2v-8L3 4z"/></svg>
                            </button>
                            <div id="popEstado" class="ua-popover" aria-hidden="true">
                                <select id="fEstado" class="ua-input">
                                    <option value="">(Todos)</option>
                                    <option value="true"  selected="@(Model.Estado == true  ? "selected" : null)">Activo</option>
                                    <option value="false" selected="@(Model.Estado == false ? "selected" : null)">Inactivo</option>
                                </select>
                                <div class="ua-pop-actions">
                                    <button type="button" class="ua-btn-sm" onclick="uaClearEstado()">Limpiar</button>
                                    <button type="button" class="ua-btn-sm primary" onclick="uaApplyEstado()">Aplicar</button>
                                </div>
                            </div>
                        </div>
                    </th>
                </tr>
            </thead>

            <tbody>
                @if (Model.Items != null && Model.Items.Any())
                {
                    foreach (var u in Model.Items)
                    {
                        <tr>
                            <td><input type="checkbox" class="form-check-input row-chk" value="@u.USUARIO_ID" /></td>
                            <td>@u.USUARIO_ID</td>
                            <td>@u.USUARIO_NOMBRE</td>
                            <td>@u.FECHA_CREACION.ToString("dd/MM/yyyy")</td>
                            <td>@(u.ROL?.ROL_NOMBRE ?? u.ROL_ID)</td>
                            <td>
                                @if (u.ESTADO) { <span class="ua-badge-activo">Activo</span> }
                                else { <span class="ua-badge-inactivo">Inactivo</span> }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6" class="text-center py-4">No hay registros para mostrar.</td></tr>
                }
            </tbody>
        </table>
    </div>

    <!-- =========================
         PAGINACIÓN (conserva filtros y orden)
         ========================= -->
    @if (Model.TotalPages > 1)
    {
        <nav class="mt-2" aria-label="Paginación de usuarios">
            <ul class="pagination ua-pagination justify-content-center">
                @for (int p = 1; p <= Model.TotalPages; p++)
                {
                    <li class="page-item @(p == Model.Page ? "active" : "")">
                        <a class="page-link"
                           href="@Url.Action("Index", new {
                               Search = Model.Search,
                               FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                               FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                               Rol = Model.Rol,
                               Estado = Model.Estado,
                               Usuario = Context.Request.Query["Usuario"].ToString(),
                               Sort = Model.Sort,
                               Dir  = Model.Dir,
                               Page = p,
                               PageSize = Model.PageSize
                           })">@p</a>
                    </li>
                }
                @if (Model.Page < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link"
                           href="@Url.Action("Index", new {
                               Search = Model.Search,
                               FechaInicio = Model.FechaInicio?.ToString("yyyy-MM-dd"),
                               FechaFin    = Model.FechaFin?.ToString("yyyy-MM-dd"),
                               Rol = Model.Rol,
                               Estado = Model.Estado,
                               Usuario = Context.Request.Query["Usuario"].ToString(),
                               Sort = Model.Sort,
                               Dir  = Model.Dir,
                               Page = Model.Page + 1,
                               PageSize = Model.PageSize
                           })">Siguiente →</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>